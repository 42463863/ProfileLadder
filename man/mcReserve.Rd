% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcReserve.R
\name{mcReserve}
\alias{mcReserve}
\title{MACRAME based development profile reserve}
\usage{
mcReserve(
  chainLadder,
  cum = TRUE,
  residuals = FALSE,
  states = NULL,
  breaks = NULL,
  MC = FALSE
)
}
\arguments{
\item{chainLadder}{cumulative or incremental run-off triangle (the triangle must be of a class \code{triangle} or \code{matrix})
in terms of a square matrix with a fully observed upper-left triangular part. If the lower-right part is also provided the function will also return standard residuals but only the upper-left (run-off) triangle
will be used for the reserve estimation purposes}

\item{cum}{logical (\code{TRUE} for cumulative triangle, \code{FALSE} for incremental)}

\item{residuals}{logical to indicate whether (incremental) residuals should be provided or not. If the run-off triangle is completely observed then the residuals
are obtained in terms of the true increments minus the predicted ones. If the bottom-right triangle is not provided (\code{NA} values) then the residuals are obtained
in terms of a back-fitting approach (see Maciak, Mizera, and Pešta (2022) for further details). However, the back-fitted residuals are only calculated when
no user specification of the states (in \code{states}) and breaks (in \code{breaks}) is provided.}

\item{states}{numeric value to provide either the number of the states to be used or it provides the actual set of states for the Markov chain model.
The default setting (\code{states = NULL}) uses the set of states automatically  defined as in Maciak, Mizera, and Pešta (2022) (parameter \code{breaks} is ignored).
If the number of states is provided by \code{states}, the states or obtained analogously as in Maciak, Mizera, and Pešta (2022), however,
the number of actual Markov states for estimation is adjusted (parameter \code{breaks} is again ignored).

If parameter \code{states} provides an explicit vector of Markov chain states (the smallest state should be larger than the smallest observed increment in the run-off triangle
and, similarly, the largest state should be smaller than the largest observed increment) then the corresponding bins (breaks) for the run-off triangle increments
are defined automatically by the midpoints between the states (parameter \code{breaks} must be set to \code{NULL}).}

\item{breaks}{vector parameter which provides explicit (unique and monotonly increasing) break points (disjoint bins) for the run-off triangle incremenets. Each bin should be represented by the corresponding Markov chain state value
given in \code{states}. If the breaks are provided as \code{breaks = c(-Inf, ... , Inf)} defining \code{k} bins all together then \code{states} should be a vector of the same length \code{k}.
Alternatively, the breaks can be also specified by a set of finite numbers defining again \code{k} bins---in such cases, the parameter \code{states} should be of the length \code{length(states) = k + 1}.
Each value in \code{states} should represent one bin defined by \code{breaks}.}

\item{MC}{logical (\code{DEFAULT = FALSE}) to indicate whether some information about the underlying
Markov chain process (e.g., Markov chain states or the estimated transition probability matrix)
should be printed in the output or not.}
}
\value{
A list with with the following elements:
\item{reserve}{numeric vector with four values: Total paid amount (i.e., the sum of the last observed diagonal in a cumulative run-off triangle); Total estimated amount (i.e., the sum of the last column
in the completed cumulative triangle); Estimated reserve (i.e., the sum of the last column in the completed cumulative triangle minus the sum of the last observed diagonal in \code{chainLadder}); True reserve
if a completed (true) \code{chainLadder} is provided in the output (i.e., the sum of the last column in \code{chainLadder} minus the sum of the last diagonal in \code{chainLadder})}
\item{method}{algorithm used for the reserve estimation}
\item{fullTriangle}{completed run-off triangle (the lower-right triangle in \code{fullTriangle})}
\item{inputTriangle}{the run-off triangle considered for the reserve estimation}
\item{trueCompleted}{run-off triangle completed into a full square (if available at the output)---the upper-left part was used by the algoritm to estimate the reserve}
\item{residuals}{a triangle with residuals (for \code{residuals = T}):  If the residuals are given in the upper-left triangle than backfitted (incremental) residuals are provided
and if the residuals are given in the lower-right triangle, standard (incremental) residuals are provided}
}
\description{
The function takes a cumulative (or incremental) run-off triangle (partially or completely observed)
and returns the reserve estimate obtained by the MACRAME algorithm (see Maciak, Mizera, and Pešta (2022) for further details).
}
\examples{
## run-off (upper-left) triangle with NA values
\donttest{
print(MW2014) 

## MACRAME prediction (DEFAULT) with explicit Markov chain setting in the output
data(MW2014)
mcReserve(MW2014, residuals = T, MC = TRUE)
}

## completed run-off triangle with 'unknown' truth (lower-bottom run-off triangle)  
## with incremental residuals (true increments minus predicted ones) being provided 
data(CameronMutual)
mcReserve(CameronMutual, residuals = TRUE)

## the same output in terms of the reserve estimate but back-fitted residuals 
## are provided instead (as the observed run-off triangle only is provided)
data(observed(CameronMutual))
mcReserve(observed(CameronMutual), residuals = TRUE)

}
\references{
Maciak, M., Mizera, I., and Pešta, M. (2022). Functional Profile Techniques for Claims Reserving. ASTIN Bulletin, 52(2), 449-482. DOI:10.1017/asb.2022.4
}
\seealso{
\code{\link[=incrExplor]{incrExplor()}}, \code{\link[=permuteReserve]{permuteReserve()}}
}
