% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallelReserve.R
\name{parallelReserve}
\alias{parallelReserve}
\title{Parallel based development profile reserve}
\usage{
parallelReserve(chainLadder, method = "parallax", cum = T, residuals = F)
}
\arguments{
\item{chainLadder}{cumulative or incremental run-off triangle (the triangle must be of class \code{triangle} or \code{matrix})
in terms of a square matrix with a fully observed upper-left triangular part
(if the lower-right part is also provided the function will also return residuals)}

\item{method}{prediction method: PARALLAX (\code{default}) or REACT (\code{method = "react"})}

\item{cum}{logical (TRUE for cumulative triangle, FALSE for incremental)}

\item{residuals}{logical to indicate whether raw (incremental) residuals should be provided or not. If the run-off triangle is complete than the residuals
are obtained in terms of true increments minus predicted increments. If the bottom-right part is missing the residuals are provided in terms of the backfitting approach (see Maciak, Mizera, and Pesta (2022) for further details).}
}
\value{
A list with with the following elements:
\item{reserve}{numeric vector with four values: Total paid amount (i.e., the sum of the last observed diagonal in a cumulative run-off triangle); Total estimated amount (i.e., the sum of the last column
in the completed cumulative triangle); Estimated reserve (i.e., the sum of the last column in the completed cumulative triangle minus the sum of the last observed diagonal in \code{chainLadder}); True reserve
if a completed (true) \code{chainLadder} is provided in the output (i.e., the sum of the last column in \code{chainLadder} minus the sum of the last diagonal in \code{chainLadder})}
\item{method}{algorithm used for the reserve estimation}
\item{completedProfiles}{completed run-off triangle (the lower-right triangle in \code{fullTriangle})}
\item{inputTriangle}{the run-off triangle considered for the reserve estimation}
\item{trueCompleted}{run-off triangle completed into a full square (if available at the output)---the upper-left part was used by the algoritm to estimate the reserve}
\item{residuals}{a triangle with residuals (for \code{residuals = T}):  If the residuals are given in the upper-left triangle than backfitted (incremental) residuals are provided
and if the residuals are given in the lower-right triangle, standard (incremental) residuals are provided}
}
\description{
The function takes a cumulative (or incremental) run-off triangle (partially or completely observed)
and returns the reserve estimate obtained by the PARALLAX or REACT algorithm (see Maciak, Mizera, and Pešta (2022) for more details).
If the full square is provided as the input then the algorithm still consider only the partially observed run-ff
triangle for the reserve estimation but, in addition, incremental residuals (true increments minus predicted increments) are returned
for validation purposes. If the run-off triangle is provided,  then algorithm provides back-fitted (incremental) residuals istead
(see Maciak, Mizera, and Pešta (2022) for details).
}
\examples{
#run-off (upper-left) triangle with NA values
\donttest{print(MW2014) 
parallelReserve(MW2014, residuals = TRUE)
}

## completed run-off triangle with 'unknown' truth (lower-bottom triangle) where 
## for the estimation purposes only the upper-left triangle is used 
data(CameronMutual)
parallelReserve(CameronMutual, residuals = TRUE)

## the previous output is identical (in term of the reserve prediction) but
## back-fitted residuals are provided in the output instead 
print(observed(CameronMutual))
parallelReserve(observed(CameronMutual), residuals = TRUE)


}
\references{
Maciak, M., Mizera, I., and Pešta, M. (2022). Functional Profile Techniques for Claims Reserving. ASTIN Bulletin, 52(2), 449-482. DOI:10.1017/asb.2022.4
}
\seealso{
\code{\link[=permuteReserve]{permuteReserve()}}, \code{\link[=mcReserve]{mcReserve()}}
}
